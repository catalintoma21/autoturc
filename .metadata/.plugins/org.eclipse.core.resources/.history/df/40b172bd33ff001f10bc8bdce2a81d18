document.addEventListener('DOMContentLoaded', () => {
    // Funcții pentru apeluri AJAX
    const apiUrl = '/api';

    // Adăugare model
    document.getElementById('addModelBtn').addEventListener('click', () => {
        const modelName = document.getElementById('modelName').value;
        fetch(`${apiUrl}/models/add?modelName=${encodeURIComponent(modelName)}`, {
            method: 'POST'
        })
        .then(response => response.json())
        .then(data => {
            alert("Model adăugat!");
            loadModels();
        })
        .catch(error => console.error('Error:', error));
    });

    // Încarcă modelele în listă
	document.addEventListener('DOMContentLoaded', () => {
	    const apiUrl = '/api';

	    // Funcție pentru a încărca lista modelelor
	    function loadModels() {
	        fetch(`${apiUrl}/models/all`)
	        .then(response => response.json())
	        .then(models => {
	            const modelList = document.getElementById('modelList');
	            modelList.innerHTML = '';
	            models.forEach(model => {
	                const li = document.createElement('li');
	                li.textContent = model.modelName;
	                modelList.appendChild(li);
	            });
	        });
	    }

	    // Adăugare model
	    document.getElementById('addModelBtn').addEventListener('click', () => {
	        const modelName = document.getElementById('modelName').value;
	        fetch(`${apiUrl}/models/add?modelName=${encodeURIComponent(modelName)}`, {
	            method: 'POST'
	        })
	        .then(response => response.json())
	        .then(data => {
	            alert("Model adăugat!");
	            document.getElementById('modelName').value = '';
	        })
	        .catch(error => console.error('Error:', error));
	    });

	    // Deschide modalul pentru modele
	    document.getElementById('openModelBtn').addEventListener('click', () => {
	        loadModels();
	        document.getElementById('modelModal').style.display = 'block';
	    });

	    // Închide modalul
	    document.getElementById('closeModelModal').addEventListener('click', () => {
	        document.getElementById('modelModal').style.display = 'none';
	    });

	    // ... restul codului pentru adăugarea pieselor și gestiunea stocului
	});


    // Adăugare piesă
    document.getElementById('addPartBtn').addEventListener('click', () => {
        const requestData = {
            name: document.getElementById('partName').value,
            carModel: document.getElementById('partCarModel').value,
            price: parseFloat(document.getElementById('partPrice').value),
            euro: parseInt(document.getElementById('partEuro').value),
            code: document.getElementById('partCode').value
        };

        fetch(`${apiUrl}/parts/add`, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(requestData)
        })
        .then(response => response.json())
        .then(data => {
            alert("Piesă adăugată!");
        })
        .catch(error => console.error('Error:', error));
    });

    // Căutare stoc
    document.getElementById('searchBtn').addEventListener('click', () => {
        const partName = document.getElementById('searchPartName').value;
        const carModel = document.getElementById('searchCarModel').value || "Toate";
        const euro = document.getElementById('searchEuro').value || "Toate";
        const code = document.getElementById('searchCode').value || "Toate";

        fetch(`${apiUrl}/inventory/search?partName=${encodeURIComponent(partName)}&carModel=${encodeURIComponent(carModel)}&euro=${encodeURIComponent(euro)}&code=${encodeURIComponent(code)}`)
        .then(response => response.json())
        .then(data => {
            populateStockTable(data);
        })
        .catch(error => console.error('Error:', error));
    });

    function populateStockTable(entries) {
        const tbody = document.getElementById('stockTable').querySelector('tbody');
        tbody.innerHTML = '';
        entries.forEach(entry => {
            const tr = document.createElement('tr');

            tr.innerHTML = `
                <td>${entry.partName}</td>
                <td>${entry.carModel}</td>
                <td>${entry.price}</td>
                <td>${entry.quantity}</td>
                <td>${entry.euro}</td>
                <td>${entry.code}</td>
                <td><button class="sellBtn" data-part="${entry.partName}" data-model="${entry.carModel}" data-price="${entry.price}" data-euro="${entry.euro}" data-code="${entry.code}">Vinde</button></td>
            `;
            tbody.appendChild(tr);
        });

        // Adaugă listener pentru butoanele de vânzare
        document.querySelectorAll('.sellBtn').forEach(button => {
            button.addEventListener('click', () => {
                const sellData = {
                    partName: button.getAttribute('data-part'),
                    carModel: button.getAttribute('data-model'),
                    price: parseFloat(button.getAttribute('data-price')),
                    euro: parseInt(button.getAttribute('data-euro')),
                    code: button.getAttribute('data-code')
                };

                fetch(`${apiUrl}/inventory/sell`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(sellData)
                })
                .then(response => response.text())
                .then(msg => {
                    alert(msg);
                    // Reîncărcă stocul după vânzare
                    document.getElementById('searchBtn').click();
                })
                .catch(error => console.error('Error:', error));
            });
        });
    }
});
